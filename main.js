import{auth,onAuth,signIn,db,dbr}from"./firebase.js";import{cleanUp,showQuestions}from"./showQuestions.js";import{lockdown,lockdownStop}from"./lockdown.js";import{popup,confirmPopup}from"./ui/popup.js";import{toast,toastError,toastWarn}from"./ui/toast.js";import{el,show,hide,copyToClipboard,currentUrlWithParams,newEl,span,button,input,isDisplayed,detectBrowser,getDateTime,isArr,hideToggle,shallowEquals,removeUndefined,arrSum,download,showMinutes,spinOnce,sleep}from"./ui/common.js";import{quizBuilder}from"./quizbuilder.js";import{quizGrader}from"./quizgrader.js";import{grid}from"./ui/grid.js";import{quizAnalyzer}from"./quizanalyzer.js";const ALLOWED_BROWSERS=["Chrome"],ITEMS_PER_PAGE=200,cUSERS="users",cEXAMS="exams",cSUBMISSIONS="submit",cANSWERS="answ",cGRADES="grade",fFIRST_NAME="fname",fLAST_NAME="lname",fEXAM_LOCKDOWN="lockdown",fEXAM_LOCKDOWN_DISABLE_CODE="lc",fEXAM_TITLE="title",fDATETIME="d",fEXAM_DURATION="duration",fPASSCODE_DURATION="cdur",fPASSCODE="c",fEXAM_ID="eid",fSUBMISSION_EVENTS="e",fSUBMISSION_QUESTION_ANSWER="a",fSUBMISSION_QUESTION_SECONDS="s",fSUBMISSION_QUESTION_INDEX="i",fREAD_ONLY="R",fQUESTIONS="questions",eSTART="s",eLOCKDOWN="l",eLEFT_LOCKDOWN="!",eLOCKDOWN_TIMEOUT="t",eUNSAVED="?",eFINISHED="f",EVENT_ICONS={[eSTART]:'<i class="fa-solid fa-book-open" title="started"></i>',[eLOCKDOWN]:'<i class="fa-solid fa-lock" title="locked"></i>',[eLEFT_LOCKDOWN]:'</i><i class="fa-solid fa-unlock" title="unlocked"></i>',[eUNSAVED]:'<i class="fa-solid fa-triangle-exclamation" title="unsaved"></i>',[eLOCKDOWN_TIMEOUT]:'<i class="fa-solid fa-hourglass-end" title="lock timed out"></i>',[eFINISHED]:'<i class="fa-solid fa-door-closed" title="exam submitted"></i>'};var user,userDoc,isDirty;function init(){const e=new URLSearchParams(window.location.search);let t;e.get("exam")&&(el("examId").value=e.get("exam")),ALLOWED_BROWSERS.includes(detectBrowser())||popup("WARNING",`<p>It looks like you are using ${detectBrowser()} as your browser.</p><p>We strongly encourage you to use Chrome instead.</p><p>This application was tested using the Chrome browser only.</p>`,null,"Dismiss"),setInterval((()=>{t&&window.navigator.onLine?t.close():t||window.navigator.onLine||(t=popup("You are offline.","Sorry, this app will not work while you are offline."))}),500),setTimeout((()=>location.reload()),864e5),displayTime(),setInterval(displayTime,1e4)}var navAllowed=!0;const main=document.querySelector("main");function allowNav(){navAllowed=!0}function disallowNav(){navAllowed=!1}function currentSectionInMain(){return main.children[0].id}function showSectionInMain(e){if(navAllowed){if(window.location.hash.slice(1)===e)return void(currentSectionInMain()!==e&&main.prepend(el(e)||el("home")));window.location.hash=`#${e}`||""}else toast("Navigation not allowed at the moment.")}function navigateBack(){navAllowed&&history.back()}function showError(e,t){console.log("ERROR",e,t),toastError(`<b>${e}</b>\n${t||""}`)}window.onhashchange=function(e){if(navAllowed){let e=el(location.hash.slice(1)||"home");e&&(main.prepend(e),main.scrollTop=0)}else"#_"!==location.hash&&(location.hash="#"+e.oldURL.split("#")[1])};const timeElement=el("infoRight");function displayTime(){timeElement.innerText=(new Date).toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit"})}function refreshUserInfo(){if(el("userInfo").innerHTML=`${userDoc.fname||""} ${userDoc.lname||""} (${user.email})`,el("name").textContent=userDoc.fname+" "+userDoc.lname,el("infoLeft").innerHTML="",userDoc.i){const e=el("infoLeft").appendChild(document.createElement("span"));e.textContent="Instructor View",e.className="link",e.addEventListener("click",(()=>showSectionInMain("instructorView")))}dbr.write(`/users/${user.uid}`,{d:dbr.timestamp(),email:user.email,[fFIRST_NAME]:userDoc.fname,[fLAST_NAME]:userDoc.lname})}async function saveUserInfo(e,t){let n={[fFIRST_NAME]:e,[fLAST_NAME]:t},s=await db.updateOne(cUSERS,user.email,n);s.error?showError("Failed to update user profile.",s.error):(Object.assign(userDoc,n),refreshUserInfo(),showSectionInMain("home"))}var currentExam={},events=[];async function loadExam(e,t){let n=await db.updateOne(cUSERS,user.email,{[fPASSCODE]:t});if(n.error)return void showError("Failed to set passcode.",n.error);if(n=await db.getDoc(cEXAMS,e),n.error)return void(n.error.includes("permission")?showError("Permission denied.","Check that the exam id is correct, and check what passcode the instructor currently has enabled for this exam."):showError("Could not load exam.",n.error));(currentExam=n).id=e,currentExam.instructions&&(el("instructionContent").innerHTML=currentExam.instructions);const s=el("ldc");hide(s),currentExam.lockdown&&(el("instructionContent").innerHTML+='<p>This exam will use full-screen and will <span id="ldcLink">prevent</span> you from leaving the window.</p>',el("ldcLink").addEventListener("click",(e=>hideToggle(s))),s.addEventListener("input",(e=>{currentExam.ldcInput=s.value}))),showSectionInMain("instructions")}async function recordEvent(e){let t=await dbr.push(`/exams/${currentExam.id}/${user.uid}`,{d:dbr.timestamp(),e:e});t?.error&&console.error("Could not push event to exam db:",e,`(${t.error})`)}function startExamAsStudent(){const e={};var t;function n(){t=Date.now(),recordEvent("s"),isDirty=!0,showSectionInMain("questions"),showQuestions(currentExam,e,el("questions"),showResultsToStudent),setTimeout(disallowNav,1e3)}events=[],!currentExam.lockdown||currentExam.lc&&currentExam.lc===currentExam.ldcInput?n():lockdown({onStart:n,onLock:()=>{console.log("locked",new Date),recordEvent("l"),events.push(Date.now()-t,"l")},onLeave:()=>{console.log("unlocked",new Date),recordEvent("!"),events.push(Date.now()-t,"!")},onCancel:()=>{showSectionInMain("home")},onLeaveTimeExceeded:()=>{if(console.log("Leave time exceeded"),recordEvent("t"),events.push(Date.now()-t,"t"),(Date.now()-t)/1e3<Math.max(currentExam.lockdown,5)+5)return isDirty=void 0,lockdownStop(),void allowNav();cleanUp(e,currentExam),console.log(e),showResultsToStudent(e,t)},maxUnlock:Math.max(currentExam.lockdown,5),disablePasscode:currentExam.lc})}async function showResultsToStudent(e,t){const n={};n.email=user.email,n.fname=userDoc.fname,n.lname=userDoc.lname,n.eid=currentExam.id,n.duration=Date.now()-t,n.d=db.serverTimestamp(),events?.length&&(n.e=events),n.answers=e;let s=await db.insertOne("submit",null,n);s.error?s.error.includes("permission")?showError("Permission denied.","It may be the case that the exam has expired."):showError("Could not save results.",s.error):(isDirty=void 0,lockdownStop(),allowNav(),recordEvent("f"),showSectionInMain("results"),el("results").innerHTML="\n  <div>\n  <p>You are all done!</p>\n  <p>Your answers have been recorded. ✔️</p>\n  <p>Goodbye.</p>\n  </div>\n  ")}var exams={},answersForExams={},users={},pageIndx={},submissionPages={};async function getUserFromUid(e){return e in users?users[e]:users[e]=(await dbr.get(`users/${e}`))?.val()}async function findExams(e,t){let n=await db.find(cEXAMS,[["orderBy","title"],["title","startsWith",e]],!t);n.error?showError("Failed to search database.",n.error):(delete n._,exams=n,showExamList())}function showExamList(){const e=el("instructorExamsList");e.innerHTML="",grid(["Exam link","Exam title",span({style:{gridColumn:"span 7"}})],Object.entries(exams).map((([e,t])=>[span({textContent:e,className:"copy-btn",events:{click:t=>{copyToClipboard(currentUrlWithParams({exam:e})),toast("Exam link copied to clipboard.")}}}),span({textContent:`${t.title} (${t.questions?.length||0} questions)`}),span({tag:"i",className:"fa-solid fa-play link",title:"Initialize exam",events:{click:n=>setExamPasscode(t,e)}}),span({tag:"i",className:"fa-solid fa-users-between-lines link",title:"Live view",events:{click:n=>showLiveSubmissions(e,t)}}),span({tag:"i",className:"fa-solid fa-a link",title:"Grading",events:{click:n=>showSubmissions(e,t)}}),span({tag:"i",className:"fa-solid fa-pen-to-square link",title:"Edit exam",events:{click:async n=>{if(t.answ){var s=await db.getDoc("answ",t.answ,!0)||{};if(s.error)return void showError("Could not retrieve answers for exam.",s.error)}showSectionInMain("instructorExamView"),quizBuilder(el("instructorExamView"),t,s,((t,n)=>saveExam(e,t,n)),(e=>{el("instructorExamView").innerHTML="",showSectionInMain("instructorView")}))}}}),span({tag:"i",className:"fa-solid fa-copy link",title:"Duplicate exam",events:{click:async e=>{let n=JSON.parse(JSON.stringify(t)),s=await db.getDoc("answ",t.answ,!0);if(s.error)return void showError("Could not retrieve answers for exam.",s.error);if(s){let e=await db.insertOne("answ",null,s);if(e.error)return void showError("Could not duplicate answers. Did not duplicate exam.",e.error);n.answ=e}n.title+=` copy ${(new Date).toJSON().slice(0,16).replace(/(:|-|T)/g,"")}`;let o=await db.insertOne(cEXAMS,null,n);o.error?showError("Could not duplicate exam.",o.error):(exams[o]=n,showExamList())}}}),span({tag:"i",className:"fa-solid fa-user-plus link",title:"Share exam"}),span({tag:"i",className:"fa-solid fa-trash-can link special",title:"Delete exam",events:{click:async n=>{confirmPopup("Deleting exam","<p>Are you sure you want to delete this exam?</p><h4>Exam deletion may have unintended consequences.</h4>","Delete",(async()=>{if(t.answ){let n=await db.deleteOne("answ",t.answ);if(n?.error)return void showError("Could not delete answers.",n.error);delete answersForExams[e]}let n=await db.deleteOne(cEXAMS,e);n?.error?showError("Could not delete exam.",n.error):(delete exams[e],showExamList())}),"Cancel")}}})])),{},e)}function setExamPasscode(e,t){const n=popup(e.title,[input({id:"setPasscodeInput",placeholder:"Passcode",style:{display:"block"}}),input({htmlBefore:"Passcode duration: ",id:"setDurationInput",tag:"input",type:"number",value:e.cdur,min:1,max:200,maxlength:5,htmlAfter:" minute(s)"}),input({htmlBefore:"Exam duration: ",id:"setExamDurationInput",tag:"input",type:"number",value:e.duration,min:1,max:1e3,maxlength:5,htmlAfter:" minute(s)"})],[newEl({tag:"button",textContent:"Start",events:{click:n=>{showExamPassCode(e,t,el("setPasscodeInput").value,el("setDurationInput").value,el("setExamDurationInput").value,el("setLockdownInput").checked,el("setLockdownTimeoutInput")?.value,el("setLockdownPasscode")?.value)}}})],"Cancel"),s=input({htmlBefore:"Lockdown timeout: ",id:"setLockdownTimeoutInput",type:"number",min:5,max:1e3,step:1,maxlength:5,value:e.lockdown||10,htmlAfter:"seconds"}),o=input({id:"setLockdownPasscode",tag:"input",type:"password",value:e.lc,htmlBefore:"Lockdown passcode",autocomplete:"off",size:6});input({id:"setLockdownInput",tag:"input",type:"checkbox",checked:e.lockdown,htmlAfter:"Use lockdown mode",events:{change:e=>{e.target.checked?(n.main.appendChild(s),n.main.appendChild(o)):(s.remove(),o.remove())}}},n.main),e.lockdown&&(n.main.appendChild(s),n.main.appendChild(o))}async function showExamPassCode(e,t,n,s,o,a,r,i){if(!n)return void toast("Passcode required.");if(!(s=parseFloat(s))||s<1)return void toast("Passcode duration must be at least 1 minute.");if(!(o=parseFloat(o))||o<1)return void toast("Exam duration must be at least 1 minute.");if(a&&(!(r=parseFloat(r))||r<5))return void toast("Lockdown timeout must be at least 5 seconds.");let l={[fDATETIME]:db.serverTimestamp(),[fPASSCODE_DURATION]:s,[fEXAM_DURATION]:o,[fEXAM_LOCKDOWN]:a?r:null,[fPASSCODE]:n};i&&(l.lc=i);let c=await db.updateOne(cEXAMS,t,l);if(c.error)return void showError("Could not set passcode for exam.",c.error);Object.assign(e,l);const d=popup(e.title,`Exam ID:<h2>${t}</h2>\n    Passcode:<h2>${n}</h2>\n    <div id="passcodeCountdown"></div>`,null,"Dismiss"),u=6e4*s+Date.now();setTimeout((function e(){if(!isDisplayed(d))return;let t=u-Date.now();t<=0?d.close():(el("passcodeCountdown").innerText=`Passcode expires in ${showMinutes(t)}`,setTimeout(e,1e3))}),10)}async function saveExam(e,t,n){let s;if(t.answ){if(s=await db.updateOne("answ",t.answ,n),s.error)return void showError("Could not save answers.",s.error)}else{if(s=await db.insertOne("answ",null,n),s.error)return void showError("Could not save answers.",s.error);t.answ=s}answersForExams[e]=n,s=await db.updateOne(cEXAMS,e,t),s.error?showError("Could not save exam.",s.error):(console.log(t),console.log(n),exams[e]=t,showExamList())}async function showSubmissions(e,t){pageIndx[e]||(pageIndx[e]=0),submissionPages[e]||(submissionPages[e]=[]);const n=button({innerHTML:'<i class="fa-solid fa-download"></i>'}),s=button({innerHTML:'<i class="fa-solid fa-rotate"></i>',events:{click:()=>{spinOnce(s.children[0]),l(!0)}}});let o=popup("Student submissions","",[s,n,button({innerHTML:'<i class="fa-solid fa-chart-pie"></i>',events:{click:async()=>{const n=popup(`Test Analytics for ${t.title}`,null,null,"Dismiss",null,{className:"large"}),s=await db.getDoc("answ",t.answ,!0);if(s?.error)return void showError("Could not get answers.",s.error);const o=await db.find("submit",["eid","==",e],!0);if(o?.error)return void showError("Could not get submissions.",o.error);const a=await db.getDocsByIds("grade",Object.keys(o),!0);a?.error?showError("Could not get gradesheets.",a.error):quizAnalyzer(n.main,t,s,o,a)}}})],"Dismiss");const a=span({textContent:t.title},o.main),r=grid(["Date/time","Duration","Email","First Name","Last Name",'<i class="fa-solid fa-lock-open"></i>','<i class="fa-solid fa-minus"></i>','<i class="fa-solid fa-circle-exclamation"></i>',"Points","Grade"],[],{className:"submissions-table"},o.main);function i(e,n,s,o,a,r){let i=Object.values(a),l=arrSum(i),c=arrSum(Object.values(t[fQUESTIONS]).map((e=>e.points)));e.textContent=l.toFixed(1),n.textContent=(100*l/c).toFixed(1),e.className=i.length<t[fQUESTIONS].length?"purple":"";const d=t[fQUESTIONS].length;s.textContent=d-i.length,o.textContent=d-Object.values(r.answers).map((e=>e.a)).filter((e=>e)).length}async function l(n){let s,o;if(t.answ&&(s=await db.getDoc("answ",t.answ,!n)||{},s?.error))showError("Could not retrieve answers for exam.",s.error);else{if(!n&&submissionPages[e][pageIndx[e]])o=submissionPages[e][pageIndx[e]];else if(o=await db.find("submit",["eid","==",e],!n),o?.error)return void showError("Could not get submissions.",o.error);if(o){submissionPages[e][pageIndx[e]]=o,a.innerHTML+=` (${Object.keys(o).length-1} submissions)`;for(let d in o){if("_"===d)continue;const u=o[d];if(u.gradeSheet=await db.getDoc("grade",d,!n)||{},u.gradeSheet?.error)return void showError("Could not get grade sheet.",u.gradeSheet.error);const m=span(),f=span(),p=span(),w=span();i(m,f,w,p,u.gradeSheet,u);const h=r.addRow([getDateTime(1e3*u.d.seconds," ",1),showMinutes(u.duration),u.email,u.fname||u?.user.fname||"",u.lname||u?.user.lname||"",(parseLockoutTime(unflattenEventArray(u.e))/1e3).toFixed(1),p,w,m,f],{className:"link",events:{click:c}},1);async function l(e){removeUndefined(e);const t=!shallowEquals(u.gradeSheet,e);if(console.log("saving. dirty?",t),t){u.gradeSheet=e;let t=db.insertOne("grade",d,u.gradeSheet);if(t?.error)return void showError("Could not update grades",t.error);i(m,f,w,p,u.gradeSheet,u),console.log("saved")}else console.log("did not save. no changes made.")}async function c(){const e={...u.gradeSheet};let n=[...r.querySelectorAll(".link")],o=n.indexOf(h),a=popup(`Submission for ${u.fname||""} ${u.lname||""} ${u.email} (${o+1} of ${n.length}) <small>${d}</small>`,"",[button({innerHTML:'<i class="icon-btn fa-solid fa-left-long"></i>',disabled:0==o||null,events:{click:()=>{o>0?(a.forceClose(),n[o-1].click()):toast("No more submissions.")}}}),button({innerHTML:'<i class="icon-btn fa-solid fa-right-long"></i>',disabled:o==n.length-1||null,events:{click:()=>{o<n.length-1?(a.forceClose(),n[o+1].click()):toast("No more submissions.")}}}),button({textContent:"Save",events:{click:()=>{l(e),a.forceClose()}}}),button({innerHTML:'Save <i class="icon-btn fa-solid fa-right-long"></i>',events:{click:()=>{l(e),a.forceClose(),o<n.length-1?n[o+1].click():n[0].click()}}}),button({innerHTML:'<i class="icon-btn fa-solid fa-trash"></i>',className:"special",events:{click:()=>{confirmPopup("Delete this student submission","<p>Are you sure you want to delete this student submission?</p><p>This action cannot be undone</p>","Delete forever",(async()=>{let e=await db.deleteOne("submit",d);e?.error?showError("Could not delete.",e.error):(h.remove(),a.forceClose())}),"Cancel")}}})],"Dismiss",(()=>{removeUndefined(e);if(!shallowEquals(u.gradeSheet,e))return confirmPopup("Unsaved grades","There are grades that have changed.","Exit without saving",(()=>{a.forceClose()}),"Cancel"),!0}),{className:"large"});quizGrader(a.main,t,s,u,e)}h._showSubmission=c,h._submissionId=d,h._submission=u,h._email=u.email}r.sort(1,!1)}}}n.addEventListener("click",(()=>{download("grades.csv",r.getCSV())})),l()}async function showLiveSubmissions(e,t){var n;const s=popup("Student submissions",`${t.title}`,null,"Dismiss",(e=>{n instanceof Function&&n()})).main,o=grid(["Date/time","Email","First Name","Last Name","Events",'<i class="fa-solid fa-lock-open"></i>'],[],{className:"submissions-live"},s),a={},r={},i={};n=dbr.twoLevelPushListener(`exams/${e}`,(async e=>{let t=await getUserFromUid(e);a[e]=o.addRow(["",t.email,t.fname,t.lname,"",""],{},1),r[e]=[]}),(async(e,t,n)=>{for(clearTimeout(i[e]);!a[e];)await sleep(10);r[e].push(n),i[e]=setTimeout((()=>{a[e].children[0].innerHTML=getDateTime(n.d," "),a[e].children[4].innerHTML=EVENT_ICONS[n.e],a[e].children[5].innerHTML=(parseLockoutTime(r[e])/1e3).toFixed(1),o.sort(0,!1)}),100)}))}function unflattenEventArray(e){if(!isArr(e))return[];let t=[],n={};for(let s of e)n.d?(n.e=s,t.push(n),n={}):n.d=s;return t}function parseLockoutTime(e){if(!isArr(e))return 0;let t=0,n=0;e.sort(((e,t)=>e.d>t.d?1:-1));for(let s of e)"s"===s.e?t=n=0:"!"===s.e?n=s.d:"l"===s.e&&(t+=s.d-n);return t}onAuth((async e=>{if(user=e){if(null===(userDoc=await db.getDoc(cUSERS,user.email,!0))){userDoc={};let e=await db.insertOne(cUSERS,user.email,userDoc);if(e.error)return void showError("Could not add user to database.",e.error.code||e.error)}refreshUserInfo(),el("userProfile").innerHTML=`\n    <p>You are signed in as <b>${user.email}</b>.</p>\n    <p><img src='${user.photoURL}'></p>\n    `,userDoc.fname&&userDoc.lname?(el("firstName").value=userDoc.fname,el("lastName").value=userDoc.lname,show("userBackBtn"),showSectionInMain("#instructorView"===location.hash?"instructorView":"home")):(hide("userBackBtn"),showSectionInMain("user"))}else showSectionInMain("default")}),(e=>showError("Authentication error.",e))),el("userBackBtn").addEventListener("click",(e=>navigateBack())),el("userInfo").addEventListener("click",(e=>showSectionInMain("user"))),el("signInBtn").addEventListener("click",signIn),el("signoutBtn").addEventListener("click",(async e=>{await auth.signOut(),location.reload()})),el("userInfoForm").addEventListener("submit",(async e=>{e.preventDefault(),saveUserInfo(el("firstName").value,el("lastName").value)})),el("examInfoForm").addEventListener("submit",(async e=>{e.preventDefault(),loadExam(el("examId").value,el("examPasscode").value)})),el("examSearchForm").addEventListener("submit",(async e=>{e.preventDefault(),findExams(el("examSearchInput").value)})),el("reloadExamsBtn").addEventListener("click",(async e=>{e.preventDefault(),spinOnce(el("reloadExamsBtn").children[0]),findExams(el("examSearchInput").value,!0)})),el("createNewExamBtn").addEventListener("click",(async e=>{let t=input({placeholder:"Exam title"});confirmPopup("Create new exam",t,"Create exam",(async e=>{if(!t.input.value)return void toastError("Exam title required.");let n={title:t.input.value},s=await db.insertOne(cEXAMS,null,n);s.error?showError("Could not create exam.",s.error):(exams[s]=n,showExamList())}),"Cancel")})),el("proceedBtn").addEventListener("click",startExamAsStudent),window.addEventListener("beforeunload",(e=>{if(isDirty)return e.preventDefault(),recordEvent("?"),isDirty})),document.addEventListener("keyup",(e=>{"PrintScreen"===e.key&&(e.preventDefault(),popup("Screenshots not allowed","","","Dismiss",null,{className:"large"}))})),document.addEventListener("keyup",(e=>{"PrintScreen"===e.key&&(e.preventDefault(),setTimeout((e=>{navigator.clipboard.writeText("")}),100))})),init();