import styles from"./common.css"with{type:"css"};document.adoptedStyleSheets.push(styles);export const isBool=e=>e?.constructor===Boolean;export const isNum=e=>e?.constructor===Number&&!isNaN(e);export const isStr=e=>e?.constructor===String;export const isObj=e=>e?.constructor===Object;export const isArr=e=>e?.constructor===Array;export const last=e=>{if(e?.length)return e[e.length-1]};export function detectBrowser(){const e=navigator.userAgent;return/Opera|OPR/.test(e)?"Opera":/Edg/.test(e)?"Edge":/Chrome/.test(e)?"Chrome":/Safari/.test(e)?"Safari":/Firefox/.test(e)?"Firefox":/MSIE|Trident/.test(e)?"Internet Explorer":"Unknown"}export const el=document.getElementById.bind(document);export function download(e,t){var n=document.createElement("a");n.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),n.setAttribute("download",e),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}export function isDisplayed(e){return e?.offsetParent}export function hide(e){(isStr(e)?el(e):e).classList.add("hidden")}export function show(e){(isStr(e)?el(e):e).classList.remove("hidden")}export function newEl(e={},t){isStr(e)&&(e={innerHTML:e});const n=document.createElement(e.tag||"div");if(delete e.tag,e.events){for(let t in e.events)n.addEventListener(t,e.events[t]);delete e.events}if(e.style){for(let t in e.style)n.style[t]=e.style[t];delete e.style}for(let t in e)void 0!==n[t]?n[t]=e[t]:n.setAttribute(t,e[t]);return t&&t.appendChild(n),n}export function span(e={},t){return isStr(e)&&(e={innerHTML:e}),e.tag="span",newEl(e,t)}export function button(e={},t){return isStr(e)&&(e={innerHTML:e}),e.tag="button",newEl(e,t)}export function input(e={},t){isStr(e)&&(e={spanBefore:e});const n=newEl({tag:"label"},t);return e.tag="input",e.htmlBefore&&(n.spanBefore=n.appendChild(span({innerHTML:e.htmlBefore}))),n.input=n.appendChild(newEl(e)),e.htmlAfter&&(n.spanAfter=n.appendChild(span({innerHTML:e.htmlAfter}))),n}export function addElementTo(e,t={}){return e.appendChild(newEl(t))}export function currentUrlWithParams(e){let t=new URL(window.location);t.hash=t.search="";for(let n in e)t.searchParams.append(n,e[n]);return t.href}export function copyToClipboard(e){navigator.clipboard.writeText(e)}export function importStyleSheet(e){const t=document.createElement("link");t.rel="stylesheet",t.href=e,document.head.appendChild(t)}