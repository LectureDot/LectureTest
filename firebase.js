import{initializeApp}from"https://www.gstatic.com/firebasejs/11.4.0/firebase-app.js";import{getAuth,onAuthStateChanged,signInWithPopup,GoogleAuthProvider}from"https://www.gstatic.com/firebasejs/11.4.0/firebase-auth.js";import{getFirestore,serverTimestamp,Timestamp,collection,doc,addDoc,setDoc,getDocs,getDoc,updateDoc,deleteDoc,onSnapshot,writeBatch,deleteField,FieldPath,query,where,documentId,orderBy,startAt,endBefore,limit,startAfter,getCountFromServer}from"https://www.gstatic.com/firebasejs/11.4.0/firebase-firestore.js";import{getDatabase,ref,get,set,push,onValue,onChildChanged,onChildAdded,serverTimestamp as rtdbTimestamp,orderByChild,query as dbrQuery,startAt as dbrStartAt,limitToLast}from"https://www.gstatic.com/firebasejs/11.4.0/firebase-database.js";const firebaseConfig={apiKey:"AIzaSyDnWzH0BBCtxWSRK0VHb3GZT7gx1vxMwc0",authDomain:"lecturedot-a4222.firebaseapp.com",projectId:"lecturedot-a4222",storageBucket:"lecturedot-a4222.firebasestorage.app",messagingSenderId:"225073159992",appId:"1:225073159992:web:cea0dbbf5c484b36556bcd",measurementId:"G-PX1NMT4EDL"},app=initializeApp(firebaseConfig),provider=new GoogleAuthProvider;export const auth=getAuth();export const onAuth=r=>onAuthStateChanged(auth,r);export function signIn(){signInWithPopup(auth,provider).then((r=>{GoogleAuthProvider.credentialFromResult(r).accessToken,r.user})).catch((r=>{r.code,r.message,r.customData.email,GoogleAuthProvider.credentialFromError(r)}))}const DATABASE=getFirestore(app);export const db={};function parseConstraints(r){if(!r?.length)return[];let e=[];r[0].constructor!==Array&&r[1].constructor!==Array&&r.length<=3&&(r=[r]);for(let t of r)t?.length&&("orderBy"==t[0]&&t[1]?e.push(orderBy(t[1])):"limit"==t[0]&&t[1]?e.push(limit(t[1])):3===t.length&&("startsWith"==t[1]?e.push(where(t[0],">=",t[2]),where(t[0],"<",t[2]+"")):e.push(where(...t))));return e}db.serverTimestamp=serverTimestamp,db.Timestamp=Timestamp,db.now=()=>Timestamp.now().seconds,db.orderBy=orderBy,db.where=where,db.startAfter=startAfter,db.limit=limit,db.startsWith=(r,e)=>[where(r,">=",e),where(r,"<",e+"")],db.getDoc=async function(r,e,t){if("_"===e)return null;if(void 0!==t){var o=`db.getDoc(${r},${e})`;if(t&&o in localStorage)try{return JSON.parse(localStorage[o])}catch(r){}}if(!navigator.onLine)return{error:"You are offline."};try{console.log(`db.getDoc(${r},${e})`);var n=await getDoc(doc(DATABASE,r,e));let a=n.exists()?n.data():null;return void 0!==t&&(localStorage[o]=JSON.stringify(a)),a}catch(r){return console.error(r),{error:r.code||"unknown error"}}},db.insertOne=async function(r,e,t){if(!navigator.onLine)return{error:"You are offline."};try{if(e){var o=await setDoc(doc(DATABASE,r,e),t);let n=`db.getDoc(${r},${e})`;return localStorage[n]=JSON.stringify(cachedDoc),e}{let e=`db.getDoc(${r},${(o=await addDoc(collection(DATABASE,r),t)).id})`;return localStorage[e]=JSON.stringify(cachedDoc),o.id}}catch(r){return console.error(r),{error:r.code||"unknown error"}}},db.updateOne=async function(r,e,t){if(!navigator.onLine)return{error:"You are offline."};try{await updateDoc(doc(DATABASE,r,e),t);let o=`db.getDoc(${r},${e})`,n=localStorage[o];if(n)try{n=JSON.parse(n),Object.assign(n,t),localStorage[o]=JSON.stringify(n)}catch(r){delete localStorage[o]}return!0}catch(r){return console.error(r),{error:r.code||"unknown error"}}},db.deleteOne=async function(r,e){if(!navigator.onLine)return{error:"You are offline."};try{await deleteDoc(doc(DATABASE,r,e)),delete localStorage[`db.getDoc(${r},${e})`]}catch(r){return console.error(r),{error:r.code||"unknown error"}}},db.getDocsByIds=async function(r,e,t){let o={};for(let n of e){let e=await db.getDoc(r,n,t);if(e){if(e.error)return{error:e.error};o[n]=e}}return o},db.find=async function(r,e,t){if(void 0!==t){var o=`db.find(${r},${JSON.stringify(e)})`;try{n=JSON.parse(localStorage[o])}catch(r){}if(t&&n)return n}if(!navigator.onLine)return{error:"You are offline."};try{if(console.log(`db.find(${r},${JSON.stringify(e)})`),e=parseConstraints(e),e?.length)var n=await getDocs(query(collection(DATABASE,r),...e));else n=await getDocs(collection(DATABASE,r));let a={};return a._={first:n.docs[n.docs.length-1],last:n.docs[n.docs.length-1],count:n.docs.length},n.docs.forEach((r=>a[r.id]=r.data())),void 0!==t&&(localStorage[o]=JSON.stringify(a)),a}catch(r){return console.error(r),{error:r.code||"unknown error"}}},db.onSnapshot=function(r,...e){const t=e.pop();return onSnapshot(query(collection(DATABASE,r),...e),(r=>{r.forEach((r=>t(r.id,r.data())))}))};const rtDB=getDatabase();export const dbr={};const fTIMESTAMP="d";dbr.timestamp=rtdbTimestamp,dbr.get=async function(r){if(!navigator.onLine)return{error:"You are offline."};try{return await get(ref(rtDB,r))}catch(r){return console.error(r),{error:r.code||"unknown error"}}},dbr.write=async function(r,e){if(!navigator.onLine)return{error:"You are offline."};try{return await set(ref(rtDB,r),e)}catch(r){return console.error(r),{error:r.code||"unknown error"}}},dbr.push=async function(r,e){if(!navigator.onLine)return{error:"You are offline."};try{return await set(push(ref(rtDB,r)),e)}catch(r){return console.error(r),{error:r.code||"unknown error"}}},dbr.twoLevelPushListener=function(r,e,t){try{const i=`dbr/${r}`,c=[ref(rtDB,r)],s=[];var o={};let d,l,u={};function n(e,n,a,c){"d"!==n&&(clearTimeout(l),clearTimeout(u[e]),t(e,n,a),o[e].d=Math.max(o[e].d||0,a.d),c||(console.log(`New doc ${c?"from cache":""} ${r}/${e}/${n}: ${JSON.stringify(a)}`),o[e][n]=a,l=setTimeout((()=>{localStorage[i]=JSON.stringify(o)}),250),u[e]=setTimeout((()=>{dbr.write(`${r}/${e}/d`,o[e].d)}),250)))}function a(t,a,i){e(t),i||(o[t]={});for(let r in a)n(t,r,a[r],i);const c=[ref(rtDB,r+"/"+t),orderByChild("d"),dbrStartAt(o[t].d+.1)];i||console.log(`Listening at ${r+"/"+t} (after ${o[t].d})...`),s.push(onChildAdded(dbrQuery(...c),(r=>{r?.key&&n(t,r.key,r.val())})))}try{(o=JSON.parse(localStorage[i])).constructor!==Object&&(o={});for(let f in o)a(f,o[f],!0),d=Math.max(d||0,o[f].d||0)}catch(g){}return d&&c.push(orderByChild("d"),dbrStartAt(d+.1)),console.log(`Listening at ${r} (starting at ${d||0})...`),s.push(onChildAdded(dbrQuery(...c),(r=>{r?.key&&a(r.key,r.val())}))),()=>{console.log(`Unsubscribing ${s.length} listeners.`),s.forEach((r=>r instanceof Function&&r()))}}catch(h){return console.error(h),{error:h.code||"unknown error"}}},window.auth=auth,window.db=db,window.dbr=dbr;