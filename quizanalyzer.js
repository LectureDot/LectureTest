import{addElementTo,importStyleSheet,isNum,arrSum,input,el,getDateTime}from"./ui/common.js";import{quizGrader}from"./quizgrader.js";import{popup}from"./ui/popup.js";import{showQuestion}from"./showQuestions.js";import{grid}from"./ui/grid.js";import{}from"./chart.js";import{}from"./chartjs-plugin-zoom.js";import{}from"./chartjs-plugin-annotation.js";importStyleSheet("./analyze.css"),Chart.defaults.color="#a5a5a5",Chart.defaults.borderColor="#aaa",Chart.defaults.plugins.legend.labels.color="#a5a5a5",Chart.defaults.plugins.tooltip.backgroundColor="rgba(0, 0, 0, 1)",Chart.defaults.backgroundColor=["#679436","#a6d96a","#f4a261","#e76f51","#ef233c","#d80032"];export function quizAnalyzer(e,t,a,n,r,o=[],s,i){console.log(t),t.answers=a,e.innerHTML="",e.classList.add("bg"),o=o.reduce(((e,t)=>{const{Email:a,...n}=t;return e[a]=n,e}),{});const l=addElementTo(e,{id:"row0",className:"row",style:{display:"flex",justifyContent:"end"}});input({id:"A",htmlBefore:"A",type:"number",value:90,style:{width:"30px"}},l),input({id:"B",htmlBefore:"B",type:"number",value:80,style:{width:"30px"}},l),input({id:"C",htmlBefore:"C",type:"number",value:70,style:{width:"30px"}},l),input({id:"D",htmlBefore:"D",type:"number",value:60,style:{width:"30px"}},l),document.querySelectorAll('input[type="number"]').forEach((e=>{e.addEventListener("change",(()=>{J(B,C,R,z,{labels:G,data:I,content:W})}))}));addElementTo(l,{id:"dropdownRoot"});!function(e){const t=addElementTo(document.getElementById("dropdownRoot"),{className:"dropdown-container"}),a=addElementTo(t,{className:"dropdown-menu"});addElementTo(t,{tag:"button",className:"dropdown-btn",innerHTML:"â˜°",events:{click:e=>{t.classList.toggle("open"),function(e,t){const a=e.getBoundingClientRect();let n=-t.getBoundingClientRect().width+a.width,r=a.height+10;t.style.left=`${n}px`,t.style.top=`${r}px`}(e.target,a)}}});e.forEach((e=>{const t=addElementTo(a,{tag:"label"});addElementTo(t,{tag:"input",type:"checkbox",value:e,checked:"Select None"!=e,events:{click:e=>function(e){"Select All"==e.target.value&&e.target.checked?document.querySelectorAll(".dropdown-menu input").forEach((e=>{e.checked="Select None"!=e.value})):"Select None"==e.target.value&&e.target.checked?document.querySelectorAll(".dropdown-menu input").forEach((e=>{"Select None"!=e.value&&(e.checked=!1)})):document.querySelectorAll(".dropdown-menu input").forEach((e=>{"Select None"!=e.value&&"Select All"!=e.value||(e.checked=!1)}));J(B,C,R,z,{labels:G,data:I,content:W})}(e)}}),addElementTo(t,{tag:"span",innerHTML:e})}))}(["Select All","Select None"].concat(Object.values(t.questions).map((e=>e.id)))),window.onclick=function(e){e.target.closest(".dropdown-container")||document.querySelectorAll(".dropdown-container").forEach((e=>{e.classList.remove("open")}))};const d=addElementTo(e,{id:"row1",className:"row"}),c=addElementTo(e,{id:"row5",className:"row"}),u=addElementTo(e,{id:"row2",className:"row"}),m=addElementTo(e,{id:"row3",className:"row"}),p=addElementTo(e,{id:"row4",className:"row"}),h=addElementTo(e,{id:"row6",className:"row"}),g=addElementTo(e,{id:"row7",className:"row"}),f=addElementTo(e,{id:"row8",className:"row"}),y=addElementTo(d,{id:"qType",className:"qtype",innerHTML:"Question Type Distribution"}),b=addElementTo(d,{id:"qTime",className:"qtype",innerHTML:"Quiz Summary"}),w=addElementTo(u,{id:"qTimePerType",className:"qtype",innerHTML:"Time Per Question Type"}),T=addElementTo(u,{id:"qTimePerQ",className:"qtype",innerHTML:"Time Per Question #"}),q=addElementTo(m,{id:"qOrderPerType",className:"qtype",innerHTML:"Order Per Question Type"}),v=addElementTo(m,{id:"qOrderPerQ",className:"qtype",innerHTML:"Order Per Question #"}),M=addElementTo(p,{id:"qAccuracyPerType",className:"qtype",innerHTML:"Points Per Question Type"}),x=addElementTo(p,{id:"qAccuracyPerQ",className:"qtype",innerHTML:"Accuracy Per Question #"}),E=addElementTo(c,{id:"gradeDist",className:"qtype",innerHTML:"Grade Distribution"}),S=addElementTo(c,{id:"dist",className:"qtype",innerHTML:"Grade Distribution"}),k=addElementTo(h,{id:"qMissing",className:"qtype",innerHTML:"Missing Responses"}),$=addElementTo(h,{id:"uMissing",className:"qtype",innerHTML:"Missing Grades"}),O=addElementTo(g,{id:"absent",className:"qtype",innerHTML:"Score vs Absense"}),j=addElementTo(g,{id:"late",className:"qtype",innerHTML:"Score vs Lateness"}),N=addElementTo(f,{id:"test",className:"report",innerHTML:"Report"}),A=Object.values(n).map((e=>e.email)).reduce(((e,t)=>(e[t]=(e[t]||0)+1,e)),{}),C=Object.values(A).filter((e=>e>1)).length,L=Object.fromEntries(Object.entries(n).filter((([e,t])=>t.duration/1e3/60>=5))),Q=Object.fromEntries(Object.entries(n).filter((([e,t])=>Object.values(L).reduce(((e,{email:t})=>(t&&(e[t]=(e[t]||0)+1),e)),{})[t.email]>1))),D=Object.values(Q).reduce(((e,t)=>((!e[t.email]||t.duration<e[t.email].duration)&&(e[t.email]=t),e)),{});Object.entries(Q).filter((([,e])=>e!==D[e.email])).map((([e])=>e)).forEach((e=>delete L[e]));let P=[],F=[];Object.values(L).map((e=>{P.push(e.duration/1e3/60),F.push(e.email)}));const B={durations:P,emails:F},H=AggregateQuizResults(L,t,a,r,o),R=H.agg,z=H.scores;console.log("qAggregation:",H);var G=[],I=[],W=[],V=0;Object.keys(n).forEach((e=>{const a=n[e];var o=r?r[e]:void 0;G.push(V),V+=1,I.push(t.questions.length-(o?Object.keys(o).length:0)),W.push([a.email])}));const U=(e,t,a,n)=>{const r=e.sort(((e,t)=>parseInt(e[a].replace(/\D/g,""),10)-parseInt(t[a].replace(/\D/g,""),10))),o=new Set,s={},i={};r.forEach((e=>{if(e[t]&&Array.isArray(e[t])){const r=e[t].filter((e=>null!=e)),l=e[n].filter((e=>null!=e));r.length>0&&(s[e[a]]||(s[e[a]]=[],i[e[a]]=[],o.add(e[a])),s[e[a]].push(r),i[e[a]].push(l))}}));const l=Array.from(o),d=l.map((e=>s[e].flat())),c=l.map((e=>i[e].flat()));return{labels:l,data:d,content:c}};function J(e,a,n,r,o){const s=Array.from(document.querySelectorAll(".dropdown-menu input:checked")).map((e=>e.value));n=JSON.parse(JSON.stringify(n)),r=JSON.parse(JSON.stringify(r)),document.querySelectorAll("canvas").forEach((e=>{e.remove()})),document.querySelectorAll(".toggle-container").forEach((e=>{e.remove()}));let i=function(e){let t={};return e.forEach(((a,n)=>{let r=e[n];r.emails.forEach(((e,a)=>{t[e]=(t[e]||0)+r.points[a]}))})),t}(n=(n=n.sort(((e,t)=>parseInt(e.qnum.replace(/\D/g,""),10)-parseInt(t.qnum.replace(/\D/g,""),10)))).filter((e=>s.includes(e.qnum)?e:"")));Object.keys(r).map((e=>{r[e].score=i[e]}));const l=arrSum(n.map((e=>e.worth)));let d=n.reduce(((e,t)=>(e.map[t.category]||(e.map[t.category]={data:0,content:[]},e.labels.push(t.category)),e.map[t.category].data+=1,e.map[t.category].content.push(t.qnum),e)),{labels:[],map:{}});function c(e){const t=Object.keys(e),a=Object.keys(e[t[0]]);return{keys:t,...a.reduce(((a,n)=>(a[n]=t.map((t=>e[t][n])),a)),{})}}d={labels:d.labels,data:d.labels.map((e=>d.map[e].data)),content:d.labels.map((e=>d.map[e].content))};const u=c(n),m=c(r),p=e.durations.length,h=(Object.values(r).filter((e=>void 0!==e.score)).map((e=>e.score)),Object.entries(r).filter((([e,t])=>void 0!==t.score)).map((([e,t])=>({x:t.score,y:(Number(t.Absent)||0)+(Number(t.AbsentLab)||0)+(Number(t.Late)||0)+(Number(t.LateLab)||0)})))),g=Object.entries(r).filter((([e,t])=>void 0!==t.score)).map((([e,t])=>({x:t.score,y:(Number(t.Late)||0)+(Number(t.LateLab)||0)}))),f=getGradeCounts(r,l),N=Object.fromEntries(Object.values(t.questions).map((e=>[e.id,e.points])));var{labels:A,data:C,content:L}=U(n,"points","qnum","emails");const Q={labels:A,data:C.map(((e,t)=>e.map((e=>e/N[A[t]])))),content:L},D=new Set(L.find((e=>e.length===p))||[]);A=[],C=[],L=[];var P=[];u.points.map(((e,t)=>{C[t]=0,L[t]=[],P[t]=[],e.forEach(((e,a)=>{null===e?P[t].push(u.emails[t][a]):C[t]+=1})),A[t]=u.qnum[t],C[t]=[p-C[t]-P[t].length],L[t]=L[t].concat([...D].filter((e=>!u.emails[t].includes(e))))}));const F={labels:A,data:C,content:L},B={labels:A,data:P.map((e=>e.length)),content:P};drawPie(d,y,"Question Type Distribution"),drawBar(b,{labels:["Duration (m)","Score","# Questions","Total Points","Good Submissions","Duplicates","Missing Gradesheets"],data:[e.durations,m.score.map((e=>100*e/l)),[Object.keys(n).length],[l],[p],[a],[o.data.filter((e=>0!==e)).length]],content:[e.emails,m.keys,[],[],[...D],[],o.content.filter(((e,t)=>0!==o.data[t]?e:""))]},t,"Quiz Summary","","",p,!1),drawPie(f,E,"Grade Distribution"),drawBar(S,f,t,"Grade Distribution","Grade","Frequency",p,!1),drawBar(w,U(n,"times","category","emails"),t,"Time Per Question Type","Question Type","Duration (m)",p,!1),drawBar(T,U(n,"times","qnum","emails"),t,"Time Per Question #","Question #","Duration (m)",p,!0),drawBar(q,U(n,"orders","category","emails"),t,"Order Per Question Type","Question Type","Order #",p,!1),drawBar(v,U(n,"orders","qnum","emails"),t,"Order Per Question #","Question #","Order #",p,!0),drawBar(M,U(n,"points","category","emails"),t,"Accuracy Per Question Type","Question Type","Accuracy",p,!0),drawBar(x,Q,t,"Accuracy Per Question #","Question #","Accuracy",p,!0),drawBar(k,F,t,"Missing Responses","Question #","# Missing",p,!1),drawBar($,B,t,"Ungraded Questions","Question #","# Questions not Graded",p,!1),drawScatter(O,h),drawScatter(j,g),Z(f,p,r,F,o,B)}function Z(e,a,n,r,o,s){if(!N)return;if(N.innerHTML="",!n||0===Object.keys(n).length)return void(N.innerHTML="<p>No data available to generate the report.</p>");if(!R||0===R.length)return void(N.innerHTML="<p>No question summary data available to generate the report.</p>");if(Object.keys(n).length<2)return void(N.innerHTML="<p>Not enough data to generate a meaningful report. Please ensure there are at least 2 unique submissions.</p>");const i=arrSum(R.map((e=>e.worth))),l=Object.fromEntries(Object.values(t.questions).map((e=>[e.id,e.points])));const d=R.filter((e=>e.orders&&e.orders.length>0)),c=function(e){const t=arrMean(e),a=e.reduce(((e,a)=>e+Math.pow(a-t,2)),0)/e.length;return Math.sqrt(a)}(d.map((e=>arrMean(e.orders)-parseInt(e.qnum.replace("q",""))))),u=d.filter((e=>arrMean(e.orders)-parseInt(e.qnum.replace("q",""))<-1.25*c)),m=d.filter((e=>arrMean(e.orders)-parseInt(e.qnum.replace("q",""))>1.25*c)),p=e=>e.sort(((e,t)=>arrMean(e.orders)-arrMean(t.orders))).map((e=>{const t=arrMean(e.orders);return`<li>${e.qnum} (${e.category}) - Average Order: ${t.toFixed(2)}</li>`})).join(""),h=`\n      <h1>Report</h1>\n      This report provides a comprehensive analysis of the results of the ${t.title}. \n      The test consisted of ${R.length} questions.\n      The total number of points possible was ${arrSum(R.map((e=>e.worth)))}.\n      There were ${R.filter((e=>"MCQ"===e.category)).length} Multiple Choice question(s), \n      ${R.filter((e=>"OEQ"===e.category)).length} Short Answer question(s),\n      ${R.filter((e=>"PARSONS"===e.category)).length} Parsons Problem(s), and\n      ${R.filter((e=>"CODE"===e.category)).length} Code Writing question(s).\n      The questions were presented in ${"ORD"==t.category?"the same order for all":"random order to the"} students.\n      The exam was administered on ${[...(e=>{if(!e||"object"!=typeof e)return[];const t=Object.values(e).map((e=>e&&e.d&&e.d.seconds?getDateTime(1e3*e.d.seconds)[0]:null)).filter((e=>null!==e));return new Set(t)})(L)].join(", ")}.\n      There were ${Object.keys(L).length} valid submissions after filtering out duplicates and those with durations less than 5 minutes.\n      <hr>\n      <h2>Time to Complete</h2>\n      On average, it took students ${arrMean(B.durations).toFixed(2)} minutes to complete the quiz, with a standard deviation of ${arrStderr(B.durations).toFixed(2)} minutes.\n      The fastest student took ${Math.min(...B.durations).toFixed(2)} minutes, while the slowest took ${Math.max(...B.durations).toFixed(2)} minutes.\n      On average, students took ${arrMean(R.map((e=>arrMean(e.times)))).toFixed(2)} minutes per question, with a standard deviation of ${arrStderr(R.map((e=>arrMean(e.times)))).toFixed(2)} minutes.\n      Multiple Choice questions took ${arrMean(R.filter((e=>"MCQ"===e.category)).map((e=>arrMean(e.times)))).toFixed(2)} (SD = ${arrStderr(R.filter((e=>"MCQ"===e.category)).map((e=>arrMean(e.times)))).toFixed(2)}) minutes,\n      the short answer questions took ${arrMean(R.filter((e=>"OEQ"===e.category)).map((e=>arrMean(e.times)))).toFixed(2)} (SD = ${arrStderr(R.filter((e=>"OEQ"===e.category)).map((e=>arrMean(e.times)))).toFixed(2)}) minutes,\n      the code question took on average ${arrMean(R.filter((e=>"CODE"===e.category)).map((e=>arrMean(e.times)))).toFixed(2)} (SD = ${arrStderr(R.filter((e=>"CODE"===e.category)).map((e=>arrMean(e.times)))).toFixed(2)}) minutes, \n      and the parsons problem took ${arrMean(R.filter((e=>"PARSONS"===e.category)).map((e=>arrMean(e.times)))).toFixed(2)} (SD = ${arrStderr(R.filter((e=>"PARSONS"===e.category)).map((e=>arrMean(e.times)))).toFixed(2)}) minutes to complete.\n      <p>\n      The five most time-consuming questions were:\n      <ol>\n        ${R.sort(((e,t)=>arrMean(t.times)-arrMean(e.times))).slice(0,5).map(((e,t)=>`<li>${e.qnum} (${e.category}) - ${arrMean(e.times).toFixed(2)} minutes</li>`)).join("")}\n      </ol>\n      <hr>\n      <h2>Score</h2>\n      <p>\n      The average score across all valid submissions was \n      ${arrMean(Object.values(n).filter((e=>void 0!==e.score)).map((e=>100*e.score/i))).toFixed(2)}% \n      with a standard deviation of  ${arrStderr(Object.values(n).filter((e=>void 0!==e.score)).map((e=>100*e.score/i))).toFixed(2)}%.\n      <p>\n      The grade distribution was as follows:\n      <ul>\n        ${e.labels.map(((t,n)=>{const r=e.data[n];return`<li>${t}: ${r} (${(r/a*100).toFixed(2)}%)</li>`})).join("")}\n      </ul>\n      <p>\n      The five most difficult questions (i.e., those with the lowest average score) were:\n      <ol>  \n        ${R.sort(((e,t)=>arrMean(e.points)/l[e.qnum]-arrMean(t.points)/l[t.qnum])).slice(0,5).map(((e,t)=>{const a=(arrMean(e.points)/l[e.qnum]*100).toFixed(2);return`<li>${e.qnum} (${e.category}) - ${a}%</li>`})).join("")}\n      </ol>\n      <hr>\n      <h2>Question Order</h2>\n      <p>\n      Students attempted the following questions later than they were initially presented \n      (i.e., they were attempted out of order). This may indicate that students were struggling with these questions:\n      <ol>\n        ${p(m)}\n      </ol>  \n      The following questions were attempted earlier than their actual position. This may indicate that students found these questions easier:  \n      <ol>\n        ${p(u)}\n      </ol>    \n      <hr>\n      <h2>Missing Question Responses</h2>\n      The following questions had missing responses from students. These questions were either not attempted or were left blank:\n      <ul>\n        ${r.labels.length>0?r.labels.map(((e,t)=>{const n=r.data[t];return n>0?`<li>${e} - ${n} (${(n/a*100).toFixed(2)}% of students)</li>`:""})).filter((e=>e)).join(""):"<li>No missing responses</li>"}\n      </ul>\n      The following are the emails of students who had missing responses for the questions above:\n      <ul>\n        ${r.content.length>0?r.content.map(((e,t)=>e.length>0?`<li>${r.labels[t]}: ${e.join(", ")}</li>`:"")).filter((e=>e)).join(""):"<li>No missing responses</li>"}\n      </ul>\n      <hr>\n      \n      <h2>Missing GradeSheets (Requires Instructor Review)</h2>\n      The following are the emails of students who had no gradesheets and were autograded:\n      <ul>\n        ${o&&o.content.length>0?o.data.map(((e,t)=>e>0?`<span style="color: red;"><li> ${o.content[t].join(", ")} </li></span>`:"")).filter((e=>e)).join(""):"<li>No missing gradesheets</li>"}\n      </ul>\n      The following are questions for which the student provided an answer but the \n      autograder flagged them for review because they were not exact matches to the test answer:\n      <ul>\n        ${s&&s.content.length>0?s.content.map(((e,t)=>e.length>0?`<span style="color: red;"><li>${s.labels[t]}: ${e.join(", ")}</li></span>`:"")).filter((e=>e)).join(""):"<li>No questions with missing gradesheets</li>"}\n      </ul>\n      `;N.innerHTML=h}J(B,C,R,z,{labels:G,data:I,content:W})}function getGradeCounts(e,t){var a=new Map([["A",[0,[]]],["B",[0,[]]],["C",[0,[]]],["D",[0,[]]],["50+",[0,[]]],["<50",[0,[]]]]);Object.keys(e).forEach((n=>{const r=100*e[n].score/t,o=r>=el("A").value?"A":r>=el("B").value?"B":r>=el("C").value?"C":r>=el("D").value?"D":r>=50?"50+":"<50",s=a.get(o);s&&(s[0]+=1,s[1].push(n),a.set(o,s))}));const n=[...a.keys()],r=[...a.values()];return{labels:n,data:r.map((e=>e[0])),content:r.map((e=>e[1]))}}function getQuestionsDurations(e,t){if(!e||!t?.questions)return[];const a=[...Object.entries(e).map((([e,t])=>({key:e,time:t.s})))].sort(((e,t)=>e.time-t.time));if(0===a.length)return[];const n=a.slice(1).map(((e,n)=>{const r=e.key,o=t.questions.find((e=>e.id===r));return{key:r,time:e.time-a[n].time,category:o?.category||"Unknown",order:n+2}})),r=a[0].key,o=t.questions.find((e=>e.id===r));return[{key:r,time:a[0].time,category:o?.category||"Unknown",order:1},...n]}function AggregateQuizResults(e,t,a,n,r){const o={};Object.keys(r).forEach((t=>{Object.values(e).find((e=>e.email===t))||delete r[t]})),Object.keys(e).forEach((s=>{const i=e[s],l=getQuestionsDurations(i.answers,t);var d=n?n[s]:void 0;d||(d=quizGrader(null,t,a,i,{},(e=>e),null)),r[i.email]||(r[i.email]={}),r[i.email].gradeSheet=d,l.forEach((e=>{o[e.key]||(o[e.key]={times:[],orders:[],points:[],emails:[]}),o[e.key].times.push(Number((e.time/60).toFixed(2))),o[e.key].orders.push(e.order),o[e.key].points.push(d[e.key]),o[e.key].emails.push(i.email)}))}));return{agg:Object.keys(o).map((e=>({qnum:e,times:o[e].times,orders:o[e].orders,points:o[e].points,emails:o[e].emails,category:t.questions.find((t=>t.id===e))?.category||"Unknown",worth:t.questions.find((t=>t.id===e))?.points||"Unknown"}))),scores:r}}function getBounds(e){const[t,a]=e.split("-").map((e=>parseFloat(e.trim())));return{lower:t,upper:a}}function arrMean(e){Array.isArray(e)||(e=[e]);return(e=e.filter((e=>isNum(e)))).reduce(((e,t)=>e+t),0)/e.length}function arrStderr(e){Array.isArray(e)||(e=[e]);const t=arrMean(e=e.filter((e=>isNum(e)))),a=e.map((e=>Math.pow(e-t,2))),n=arrSum(a)/e.length;return Math.sqrt(n)/Math.sqrt(e.length)}function calculateHistogram(e){const t=Math.min(...e),a=Math.max(...e),n=Math.ceil(2*Math.cbrt(e.length)),r=(a-t)/n,o=Array.from({length:n},((e,a)=>({range:`${(t+a*r).toFixed(1)} - ${(t+(a+1)*r).toFixed(1)}`,count:0})));return e.forEach((e=>{const a=Math.min(Math.floor((e-t)/r),n-1);o[a].count++})),o}function countCategoriesWithLabels(e,t){const a={};return e.forEach(((e,n)=>{a[e]||(a[e]={count:0,labelList:[]}),a[e].count+=1,a[e].labelList.push(t[n])})),{labels:Object.keys(a),data:Object.values(a).map((e=>e.count)),content:Object.values(a).map((e=>e.labelList))}}function drawBar(e,t,a,n,r,o,s,i=!1,l){var d,c,u,m,p;if(e.innerHTML="",Array.isArray(t)||null==t.labels){const e=calculateHistogram(t.data);d=e.map((e=>e.range)),c=e.map((e=>e.count)),u=p=d.map((e=>0)),m=d.map((e=>Math.max(c)))}else d=t.labels,c=t.data.map(arrMean),u=t.data.map(arrStderr),m=Math.max(...c.map(((e,t)=>e+u[t]))),p=t.data.map((e=>(Array.isArray(e)||(e=[e]),e.filter((e=>void 0!==e)).length)));if(d.length>25){var h=addElementTo(e,{className:"toggle-container"}),g=addElementTo(h,{tag:"label",className:"toggle-switch"}),f=addElementTo(g,{tag:"input",id:"toggleSwitch",type:"checkbox"});addElementTo(g,{tag:"span",className:"slider"}),addElementTo(h,{tag:"span",id:"toggleLabel",className:"toggle-label",textContent:"Show Question"})}var y=addElementTo(e,{tag:"canvas",id:e.id}).getContext("2d");const b=d.map((e=>{let t=a.questions.find((t=>t.id===e));return t?.points||0})),w={low:"rgba(255, 99, 132, 0.8)",medium:"rgba(255, 206, 86, 0.8)",high:"rgba(75, 192, 192, 0.8)"},T=p.map((e=>{var t="high";return i&&(t=e<.33*s?"low":e>.8*s?"high":"medium"),w[t]})),q={id:"referenceLine",afterDraw(e){if(null==l)return;const{ctx:t,scales:{y:a}}=e,n=a.getPixelForValue(l);t.save(),t.beginPath(),t.moveTo(e.chartArea.left,n),t.lineTo(e.chartArea.right,n),t.strokeStyle="red",t.lineWidth=2,t.stroke(),t.restore()}},v={id:"errorBars",afterDatasetsDraw(e){const t=e.ctx;t.save(),t.strokeStyle="white",t.lineWidth=1.5,e.data.datasets.forEach(((a,n)=>{if(!a.errorBars)return;e.getDatasetMeta(n).data.forEach(((n,r)=>{const o=a.errorBars[r];if(!o||o.lower===o.upper)return;const s=n.x,i=e.scales.y.getPixelForValue(o.lower),l=e.scales.y.getPixelForValue(o.upper);t.beginPath(),t.moveTo(s,i),t.lineTo(s,l),t.stroke()}))})),t.restore()}},M={labels:d,datasets:[{data:c,backgroundColor:T,errorBars:c.map(((e,t)=>({lower:e-u[t],upper:e+u[t]})))}]},x={responsive:!0,onClick:(e,s)=>{if(s.length>0){const i=s[0].index,l=E.data.labels[i],d=t?.content?t.content[i]:"";let c=a.questions.find((e=>e.id===l)),u=a.answers[l];if(f?.checked){if(c){let e=popup(l,"",null,"Dismiss"),t=addElementTo(e.main,{innerHTML:"Answer: "+u});showQuestion(t,c,c.id,a.answers,a.answers[c.id])}}else copyChartToClipboard(e.chart),t?.data&&Array.isArray(t.data[i])&&t.data[i].length>1?zoomPopup({data:t.data[i],content:d},a,l,o||l,"Frequency"):showContents(t,l,r,n)}},plugins:{title:{display:!0,text:n,font:{size:25},padding:{top:10,bottom:20},color:"#aaa"},legend:{display:!1},tooltip:{callbacks:{label:function(e){const t=e.dataIndex;return[`Value: ${e.raw.toFixed(2)}`,p[t]>1?`Count: ${p[t]}`:"",0!=b[t]?`Worth: ${b[t]}`:""].filter(Boolean)}}},annotation:{annotations:{referenceLine:{type:"line",yMin:l||0,yMax:l||0,label:{content:"Target",enabled:!0,position:"end"}}}},zoom:{pan:{enabled:!0,mode:"xy"},zoom:{wheel:{enabled:!0},pinch:{enabled:!0},mode:"xy"}}},scales:{x:{title:{display:!0,text:r},ticks:{display:!0},grid:{display:!1}},y:{title:{display:!0,text:o},beginAtZero:!0,max:Math.max(m,l||0),grid:{color:"rgba(207, 196, 196, 0.4)"}}},maintainAspectRatio:!1},E=new Chart(y,{id:"myChart",type:"bar",data:M,options:x,plugins:[v,q]});e.addEventListener("dblclick",(()=>{E.resetZoom()}))}function drawPie(e,t,a){let n=e.labels,r=e.data,o=r.reduce(((e,t)=>e+t),0);t.innerHTML="";var s=addElementTo(t,{tag:"canvas",id:t.id}).getContext("2d");new Chart(s,{type:"pie",data:{labels:n,datasets:[{data:r,borderWidth:1,borderColor:"rgb(43,27,13)"}]},options:{responsive:!0,maintainAspectRatio:!1,layout:{padding:0},onClick:(t,r)=>{if(r.length>0){const o=r[0].index,s=n[o];copyChartToClipboard(t.chart),showContents(e,s,"",a)}},plugins:{title:{display:!0,text:a,font:{size:25},padding:{top:10,bottom:20},color:"#aaa"},legend:{position:"left",labels:{boxWidth:10,font:{size:20},color:"#a5a5a5"}},tooltip:{enabled:!0,callbacks:{label:function(e){e.dataIndex;return[`${e.raw.toFixed(2)} (${100*(e.raw/o).toFixed(2)}%)`].filter(Boolean)}}}}}})}function zoomPopup(e,t,a,n,r){if(!Array.isArray(e.data)||e.data.length<=1)return;const o=popup("","",null,"Dismiss",null,{style:{width:"600px",height:"600px"}});new Set(e.data).size<5?drawPie(countCategoriesWithLabels(e.data,e.content),o.main,a):drawBar(o.main,e,t,a,n,r)}function showContents(e,t,a,n){let r,o;if(r=o=-1,e?.labels&&e.labels.forEach(((e,a)=>{e==t&&(r=a)})),console.log(e),-1==r){let a=getBounds(t);o=[],e.data.forEach(((t,n)=>{a.lower<=t&&a.upper>=t&&o.push([e.content[n],t.toFixed(2)])}))}else o=e.content?e.content[r].map((e=>[e,t])):[];if(o.length>0){let e=popup((n!=a?n:"")+" "+a+" : "+t,"",null,"Dismiss");addElementTo(e.main,{});var s=grid(["Element","Value"],[],{},e.main);o.forEach((e=>{s.addRow([e[0],e[1]])}))}}function copyChartToClipboard(e){const t=e.canvas,a=e.options.plugins.tooltip.enabled;e.options.plugins.tooltip.enabled=!1,e.update(),setTimeout((()=>{t.toBlob((t=>{const n=new ClipboardItem({"image/png":t});navigator.clipboard.write([n]).then((()=>{console.log("Chart copied to clipboard!")})).catch((e=>{console.error("Failed to copy:",e)})),e.options.plugins.tooltip.enabled=a,e.update()}))}),200)}function linearRegression(e){const t=e.length,a=e.reduce(((e,t)=>e+t.x),0),n=e.reduce(((e,t)=>e+t.y),0),r=(t*e.reduce(((e,t)=>e+t.x*t.y),0)-a*n)/(t*e.reduce(((e,t)=>e+t.x*t.x),0)-a*a);return{m:r,b:(n-r*a)/t}}function getRegressionLine(e,t,a){const{m:n,b:r}=linearRegression(e);return[{x:t,y:n*t+r},{x:a,y:n*a+r}]}function drawScatter(e,t){var a=addElementTo(e,{tag:"canvas",id:e.id}).getContext("2d");const{m:n,b:r}=linearRegression(t),o=getRegressionLine(t,2,50);new Chart(a,{type:"scatter",data:{datasets:[{label:"",data:t,backgroundColor:"rgba(70, 193, 230, 0.4)",pointRadius:5},{label:"Regression Line",data:o,type:"line",borderColor:"red",borderWidth:1,fill:!1,pointRadius:0}]},options:{plugins:{legend:{display:!1},annotation:{annotations:{equationLabel:{type:"label",content:`y = ${n.toFixed(2)}x + ${r.toFixed(2)}`,xValue:10,yValue:1,backgroundColor:"#acacac",font:{size:14,weight:"bold",color:"white"},padding:6}}}},scales:{x:{type:"linear",position:"bottom",grid:{color:"rgba(207, 196, 196, 0.4)"}},y:{beginAtZero:!0,grid:{color:"rgba(207, 196, 196, 0.4)"}}}}})}function uniformDistribution(e,t,a){return e>=t&&e<=a?1/(a-t):0}function normalDistribution(e,t,a){return 1/(a*Math.sqrt(2*Math.PI))*Math.exp(-.5*Math.pow((e-t)/a,2))}