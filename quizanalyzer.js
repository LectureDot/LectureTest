import{addElementTo,importStyleSheet,isNum}from"./ui/common.js";import{quizGrader}from"./quizgrader.js";import{popup}from"./ui/popup.js";import{showQuestion}from"./showQuestions.js";import{F}from"./schema.js";importStyleSheet("../src/analyze.css");import{}from"../src/chart.js";import{}from"../src/chartjs-plugin-zoom.js";Chart.defaults.color="#a5a5a5",Chart.defaults.borderColor="#aaa",Chart.defaults.plugins.legend.labels.color="#a5a5a5",Chart.defaults.plugins.tooltip.backgroundColor="rgba(0, 0, 0, 0.8)";export function quizAnalyzer(e,t,o,r,a,n,s){e.classList.add("bg");const i=addElementTo(e,{id:"row0",className:"row",style:{display:"flex",justifyContent:"end"}});addElementTo(i,{id:"dropdownRoot"});createDropdown(["Select All","Select None"].concat(Object.values(t.questions).map((e=>e.id))));const l=addElementTo(e,{id:"row1",className:"row"}),d=addElementTo(e,{id:"row2",className:"row"}),c=addElementTo(e,{id:"row3",className:"row"}),p=addElementTo(e,{id:"row4",className:"row"}),u=addElementTo(e,{id:"row5",className:"row"}),m=addElementTo(l,{id:"qType",className:"qtype",innerHTML:"Question Type Distribution"}),y=addElementTo(l,{id:"qTime",className:"qtype",innerHTML:"Quiz Summary"}),g=addElementTo(d,{id:"qTimePerType",className:"qtype",innerHTML:"Time Per Question Type (s)"}),f=addElementTo(d,{id:"qTimePerQ",className:"qtype",innerHTML:"Time Per Question # (s)"}),b=addElementTo(c,{id:"qOrderPerType",className:"qtype",innerHTML:"Order Per Question Type"}),h=addElementTo(c,{id:"qOrderPerQ",className:"qtype",innerHTML:"Order Per Question #"}),w=addElementTo(p,{id:"qAccuracyPerType",className:"qtype",innerHTML:"Points Per Question Type"}),T=addElementTo(p,{id:"qAccuracyPerQ",className:"qtype",innerHTML:"Accuracy Per Question #"}),k=addElementTo(u,{id:"qScore",className:"qtype",innerHTML:"Total Score"}),v=addElementTo(u,{id:"qScorePct",className:"qtype",innerHTML:"Score out of 100"}),x=Object.values(r).map((e=>e.email)).reduce(((e,t)=>(e[t]=(e[t]||0)+1,e)),{}),E=Object.values(x).filter((e=>e>1)).length,C=Object.fromEntries(Object.entries(r).filter((([e,t])=>t.duration/1e3/60>=5))),q=Object.fromEntries(Object.entries(r).filter((([e,t])=>Object.values(C).reduce(((e,{email:t})=>(t&&(e[t]=(e[t]||0)+1),e)),{})[t.email]>1)));Object.entries(q).filter((([,e],t,o)=>e===o.reduce(((e,[,t])=>!e[t.email]||t.duration>e[t.email].duration?{...e,[t.email]:t}:e),{})[e.email])).map((([e])=>e)).forEach((e=>delete C[e])),console.log(C);const P=Object.values(C).map((e=>e.duration/1e3/60)),j=t.questions.reduce(((e,t)=>(e[t.category]=(e[t.category]||0)+1,e)),{}),S=(N=t.questions,arrSum(Object.values(N).map((e=>e.points))));var N;const O=AggregateQuizResults(C,t,o),M=O.agg,H=O.scores,A=(e,t,o)=>e.sort(((e,t)=>parseInt(e[o].replace(/\D/g,""),10)-parseInt(t[o].replace(/\D/g,""),10))).reduce(((e,r)=>(e[r[o]]=e[r[o]]?e[r[o]].concat(r[t]):r[t],e)),{});var D=addElementTo(m,{tag:"canvas",id:"qType"}).getContext("2d");drawPie(Object.keys(j),Object.values(j),D),drawHist(y,{Duration:P,"Good Submissions":[P.length],Duplicates:[E]},t),drawHist(g,A(M,"times","name"),t),drawHist(f,A(M,"times","key"),t),drawHist(b,A(M,"orders","name"),t),drawHist(h,A(M,"orders","key"),t),drawHist(w,A(M,"points","name"),t);const L=Object.fromEntries(Object.values(t.questions).map((e=>[e.id,e.points])));drawHist(T,Object.fromEntries(Object.entries(A(M,"points","key")).map((([e,t])=>[e,t.filter((e=>isNum(e))).map((t=>t/L[e]))]))),t),drawHist(k,{Points:H},t,S),drawHist(v,{Score:H.map((e=>100*e/S))},t,100);processData([[[10,12,14,16],[11,13,15,17],[9,11,13,15]],[[8,10,12,14],[9,11,13,15],[7,9,11,13]]],["Group A","Group B"],["rgba(255, 99, 132, 0.5)","rgba(54, 162, 235, 0.5)"])}function getQuestionsDurations(e,t){if(!e||!t?.questions)return[];const o=[...Object.entries(e).map((([e,t])=>({key:e,time:t.s})))].sort(((e,t)=>e.time-t.time));if(0===o.length)return[];const r=o.slice(1).map(((e,r)=>{const a=e.key,n=t.questions.find((e=>e.id===a));return{key:a,time:e.time-o[r].time,name:n?.category||"Unknown",order:r+2}})),a=o[0].key,n=t.questions.find((e=>e.id===a));return[{key:a,time:o[0].time,name:n?.category||"Unknown",order:1},...r]}function AggregateQuizResults(e,t,o){const r={},a=[];Object.keys(e).forEach((n=>{const s=e[n],i=getQuestionsDurations(s.answers,t),l=quizGrader(null,t,o,s.answers,{},(e=>e),null);a.push(arrSum(Object.values(l))),i.forEach((e=>{r[e.key]||(r[e.key]={times:[],orders:[],points:[]}),r[e.key].times.push(e.time),r[e.key].orders.push(e.order),r[e.key].points.push(l[e.key])}))}));return{agg:Object.keys(r).map((e=>({key:e,times:r[e].times,orders:r[e].orders,points:r[e].points,name:t.questions.find((t=>t.id===e))?.category||"Unknown"}))),scores:a}}const arrSum=e=>e.reduce(((e,t)=>e+(isNum(t)?t:0)),0);function arrMean(e){return(e=e.filter((e=>isNum(e)))).reduce(((e,t)=>e+t),0)/e.length}function arrStdev(e){const t=arrMean(e=e.filter((e=>isNum(e)))),o=e.map((e=>Math.pow(e-t,2))),r=arrSum(o)/e.length;return Math.sqrt(r)}function calculateConfidenceInterval(e){const t=arrMean(e),o=arrStdev(e),r=e.length,a=o/Math.sqrt(r)*1.96;return{mean:t,lower:t-a,upper:t+a}}function processData(e,t,o){return e.map(((e,r)=>{const a=e[0].map(((t,o)=>calculateConfidenceInterval(e.map((e=>e[o])))));return{name:t[r],color:o[r],values:a}}))}function drawHist(e,t,o,r){var a=addElementTo(e,{tag:"canvas",id:e.id}).getContext("2d");const n={id:"referenceLine",afterDraw(e){if(null==r)return;const{ctx:t,scales:{y:o}}=e,a=o.getPixelForValue(r);t.save(),t.beginPath(),t.moveTo(e.chartArea.left,a),t.lineTo(e.chartArea.right,a),t.strokeStyle="red",t.lineWidth=2,t.stroke(),t.restore()}},s={id:"errorBars",afterDraw(e){const t=e.ctx;t.save(),t.strokeStyle="white",t.lineWidth=1.5,e.data.datasets.forEach(((o,r)=>{if(!o.errorBars)return;e.getDatasetMeta(r).data.forEach(((r,a)=>{const n=o.errorBars[a];if(!n||n.lower===n.upper)return;const s=r.x,i=e.scales.y.getPixelForValue(n.lower),l=e.scales.y.getPixelForValue(n.upper);t.beginPath(),t.moveTo(s,i),t.lineTo(s,l),t.stroke(),t.beginPath(),t.moveTo(s-5,i),t.lineTo(s+5,i),t.moveTo(s-5,l),t.lineTo(s+5,l),t.stroke()}))})),t.restore()}},i=Object.keys(t),l=i.map((e=>arrMean(t[e]))),d=i.map((e=>arrStdev(t[e]))),c=Math.max(...l.map(((e,t)=>e+d[t]))),p=i.map((e=>t[e].filter((e=>void 0!==e)).length)),u=i.map((e=>{let t=o.questions.find((t=>t.id===e));return t?.points||0})),m={labels:i,datasets:[{data:l,backgroundColor:"rgba(54, 162, 235, 0.6)",borderColor:"rgba(54, 162, 235, 1)",borderWidth:1,errorBars:l.map(((e,t)=>({lower:e-d[t],upper:e+d[t]})))}]},y={responsive:!0,onClick:(e,t)=>{if(t.length>0){const e=t[0].index,r=g.data.labels[e];let a=o.questions.find((e=>e.id===r));if(a){let e=popup(r,"",null,"Dismiss");showQuestion(e.main,a,a.id,{})}}},plugins:{legend:{display:!1},tooltip:{mode:"index",intersect:!1,callbacks:{label:function(e){const t=e.dataIndex;return[`Value: ${e.raw.toFixed(2)}`,`Count: ${p[t]}`,`Points: ${u[t]}`]}}},annotation:{annotations:{referenceLine:{type:"line",yMin:r||0,yMax:r||0,borderColor:"red",borderWidth:2,label:{content:"Target",enabled:!0,position:"end"}}}},zoom:{pan:{enabled:!0,mode:"xy"},zoom:{wheel:{enabled:!0},pinch:{enabled:!0},mode:"xy"}}},scales:{x:{ticks:{display:!0},grid:{display:!1}},y:{beginAtZero:!0,max:Math.max(c,r||0)}},maintainAspectRatio:!1},g=new Chart(a,{id:"myChart",type:"bar",data:m,options:y,plugins:[s,n]});e.addEventListener("dblclick",(()=>{g.resetZoom()}))}function drawPie(e,t,o){new Chart(o,{type:"pie",data:{labels:e,datasets:[{label:"Question Type",data:t,backgroundColor:["#489fb5","#82c0cc","#ffa62b","#16697a","#ede7e3"],borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,layout:{padding:0},plugins:{legend:{position:"left",labels:{boxWidth:10,font:{size:20},color:"#a5a5a5"}}}}})}function drawLinePlotWithCI(e,t){const o=t.map((e=>({label:e.name,data:e.values.map(((e,t)=>({x:t,y:e.mean}))),borderColor:e.color,backgroundColor:e.color,borderWidth:2,fill:!1,pointRadius:3,tension:.3})));t.forEach((e=>{o.push({label:`${e.name} CI`,data:e.values.map(((e,t)=>({x:t,y:e.upper}))),borderColor:"transparent",backgroundColor:e.color,fill:"+1",tension:.3}),o.push({label:`${e.name} CI`,data:e.values.map(((e,t)=>({x:t,y:e.lower}))),borderColor:"transparent",backgroundColor:e.color,fill:"-1",tension:.3})})),new Chart(e,{type:"line",data:{datasets:o},options:{plugins:{legend:{display:!0}},scales:{x:{type:"linear",position:"bottom",title:{display:!0,text:"X Axis"},ticks:{stepSize:1}},y:{title:{display:!0,text:"Y Axis"},ticks:{stepSize:1}}}}})}const errorBarPlugin={id:"errorBars",afterDraw(e){const t=e.ctx;t.save(),t.strokeStyle="#c8553d",t.lineWidth=1.5,e.data.datasets.forEach(((o,r)=>{if(!o.errorBars)return;e.getDatasetMeta(r).data.forEach(((r,a)=>{const n=o.errorBars[a];if(!n)return;const s=r.x,i=e.scales.y.getPixelForValue(n.lower),l=e.scales.y.getPixelForValue(n.upper);t.beginPath(),t.moveTo(s,i),t.lineTo(s,l),t.stroke(),t.beginPath(),t.moveTo(s-5,i),t.lineTo(s+5,i),t.moveTo(s-5,l),t.lineTo(s+5,l),t.stroke()}))})),t.restore()}};function drawLinePlotWithErrorBars(e,t){const o=t.map((e=>({label:e.name,data:e.values.map(((e,t)=>({x:t,y:e.mean}))),borderColor:e.color,backgroundColor:e.color,borderWidth:2,pointRadius:4,tension:.3,errorBars:e.values.map((e=>({lower:e.lower,upper:e.upper})))})));new Chart(e,{type:"line",data:{datasets:o},options:{plugins:{legend:{display:!0}},scales:{x:{type:"linear",position:"bottom",title:{display:!0,text:"X Axis"},ticks:{stepSize:1}},y:{title:{display:!0,text:"Y Axis"}}}},plugins:[errorBarPlugin]})}function createDropdown(e){const t=document.createElement("div");t.className="dropdown-container";const o=document.createElement("button");o.className="dropdown-btn",o.innerHTML="â˜°",o.onclick=function(e){t.classList.toggle("open"),adjustDropdownPosition(e.target,r)};const r=document.createElement("div");r.className="dropdown-menu",e.forEach((e=>{const t=document.createElement("label"),o=document.createElement("input");o.type="checkbox",o.value=e,o.checked="Select None"!=e,o.onchange=captureSelected,t.appendChild(o),t.appendChild(document.createTextNode(e)),r.appendChild(t)})),t.appendChild(o),t.appendChild(r),document.getElementById("dropdownRoot").appendChild(t)}function adjustDropdownPosition(e,t){const o=e.getBoundingClientRect();let r=-t.getBoundingClientRect().width+o.width,a=o.height+10;t.style.left=`${r}px`,t.style.top=`${a}px`}function captureSelected(){const e=Array.from(document.querySelectorAll(".dropdown-menu input:checked")).map((e=>e.value));console.log("Selected Options:",e)}window.onclick=function(e){e.target.closest(".dropdown-container")||document.querySelectorAll(".dropdown-container").forEach((e=>{e.classList.remove("open")}))};